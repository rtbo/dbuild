module dbuild.cook.log;

/// CmdLog wraps a file that log a hash for each command in a build graph.
/// For each output that is generated by a rule, a CmdLog.Entry is appended
/// in the list. On a later build, the log is read to check whether the command
/// line has changed
class CmdLog
{
    struct Entry
    {
        long mtime;
        ulong hash;
    }

    private Entry[string] _entries;
    private string _path;

    this (string path)
    {
        import std.file : exists, isFile;
        import std.format : formattedRead;
        import std.stdio : File;

        this._path = path;
        if (path.exists && path.isFile) {
            auto f = File(path, "r");
            foreach (l; f.byLine) {
                Entry e;
                string output;
                formattedRead!"%s %s %s"(l, e.mtime, e.hash, output);
                this._entries[output] = e;
            }
            this._entries.rehash();
        }
    }

    @property string path() const {
        return _path;
    }

    @property void path (in string path) {
        _path = path;
    }

    const(Entry)* entry(in string output) const {
        return output in _entries;
    }

    void setEntry(in string output, in Entry entry) {
        _entries[output] = entry;
    }

    void writeDown()
    {
        import std.stdio : File;

        auto f = File(_path, "w");
        foreach (k, e; _entries) {
            f.writefln("%s %s %s", e.mtime, e.hash, k);
        }
    }
}
